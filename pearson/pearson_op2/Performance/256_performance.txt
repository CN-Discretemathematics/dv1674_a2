========== Measuring size=256 ==========
Data: data/256.data -> output/output_256.txt

Callgrind top candidate functions (heuristic):
    557,684,416 (100.0%)  PROGRAM TOTALS
    312,593,280 (56.05%)  analysis.cpp:Analysis::pearson(Vector const&, Vector const&) [/home/zxn1225/Desktop/performance_opti/pearson_op2/pearson]
     38,606,435 ( 6.92%)  ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_buffer_1.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
     27,969,490 ( 5.02%)  ./stdlib/./stdlib/strtod_l.c:____strtod_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
     21,691,290 ( 3.89%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
     14,176,098 ( 2.54%)  ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
      6,880,512 ( 1.23%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
      6,364,800 ( 1.14%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__printf_buffer [/usr/lib/x86_64-linux-gnu/libc.so.6]
      5,290,069 ( 0.95%)  ./stdlib/./stdlib/strtod_l.c:str_to_mpn.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
      4,798,080 ( 0.86%)  ???:std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]

Massif peak heap (bytes): 1523712
Massif peak heap (KB): 1488

  parsed run 1: Wall=0.206310 User=0.060000 Sys=0.050000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4948KB
  parsed run 2: Wall=0.204139 User=0.030000 Sys=0.000000 AvgCPU=50.000000% MaxCPU=100.000000% MaxRSS=4820KB
  parsed run 3: Wall=0.218753 User=0.060000 Sys=0.070000 AvgCPU=120.450000% MaxCPU=150.000000% MaxRSS=4944KB
  parsed run 4: Wall=0.192894 User=0.030000 Sys=0.000000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4780KB
  parsed run 5: Wall=0.227658 User=0.030000 Sys=0.000000 AvgCPU=0.000000% MaxCPU=0.000000% MaxRSS=4816KB
===== Final summary for size=256 =====
Execution time (avg over 5 native runs):
  Avg_Wall_seconds: 0.209951
  Avg_User_seconds: 0.042000
  Avg_Sys_seconds: 0.024000
Memory (massif & sampled):
  Massif_peak_heap_bytes: 1523712
  Massif_peak_heap_kB: 1488
  Avg_MaxRSS_kB (sampled): 4862
CPU utilization (sampling):
  Avg_CPU_percent_from_sampling: 74.090000%
  Max_CPU_percent_observed_from_sampling: 150%

Callgrind outputs: Performance/callgrind.256.out, Performance/callgrind.256.annotate.txt
Massif outputs: Performance/massif.256.out, Performance/massif.256.txt
Native per-run logs are visible in Performance/
