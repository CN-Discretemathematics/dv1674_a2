========== Measuring size=512 ==========
Data: data/512.data -> output/output_512.txt

Callgrind top candidate functions (heuristic):
    3,465,992,796 (100.0%)  PROGRAM TOTALS
    2,491,913,984 (71.90%)  analysis.cpp:Analysis::pearson(Vector const&, Vector const&) [/home/zxn1225/Desktop/performance_opti/pearson_op2/pearson]
      155,504,501 ( 4.49%)  ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_buffer_1.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
      111,879,413 ( 3.23%)  ./stdlib/./stdlib/strtod_l.c:____strtod_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
       86,768,852 ( 2.50%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
       56,820,957 ( 1.64%)  ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
       27,523,584 ( 0.79%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
       25,509,120 ( 0.74%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__printf_buffer [/usr/lib/x86_64-linux-gnu/libc.so.6]
       21,161,897 ( 0.61%)  ./stdlib/./stdlib/strtod_l.c:str_to_mpn.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
       19,229,952 ( 0.55%)  ???:std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]

Massif peak heap (bytes): 5857280
Massif peak heap (KB): 5720

  parsed run 1: Wall=2.056390 User=0.000000 Sys=0.000000 AvgCPU=0.000000% MaxCPU=0.000000% MaxRSS=8648KB
  parsed run 2: Wall=0.682640 User=0.370000 Sys=0.170000 AvgCPU=103.220000% MaxCPU=133.000000% MaxRSS=8740KB
  parsed run 3: Wall=0.770324 User=0.260000 Sys=0.300000 AvgCPU=81.157143% MaxCPU=100.000000% MaxRSS=8476KB
  parsed run 4: Wall=14.213874 User=0.000000 Sys=0.000000 AvgCPU=0.000000% MaxCPU=0.000000% MaxRSS=0KB
  parsed run 5: Wall=0.716190 User=0.370000 Sys=0.210000 AvgCPU=84.166667% MaxCPU=104.000000% MaxRSS=8508KB
===== Final summary for size=512 =====
Execution time (avg over 5 native runs):
  Avg_Wall_seconds: 3.687884
  Avg_User_seconds: 0.200000
  Avg_Sys_seconds: 0.136000
Memory (massif & sampled):
  Massif_peak_heap_bytes: 5857280
  Massif_peak_heap_kB: 5720
  Avg_MaxRSS_kB (sampled): 6874
CPU utilization (sampling):
  Avg_CPU_percent_from_sampling: 53.708762%
  Max_CPU_percent_observed_from_sampling: 133%

Callgrind outputs: Performance/callgrind.512.out, Performance/callgrind.512.annotate.txt
Massif outputs: Performance/massif.512.out, Performance/massif.512.txt
Native per-run logs are visible in Performance/
