========== Measuring size=128 ==========
Data: data/128.data -> output/output_128.txt

Callgrind top candidate functions (heuristic):
    102,056,072 (100.0%)  PROGRAM TOTALS
    39,347,648 (38.55%)  analysis.cpp:Analysis::pearson(Vector const&, Vector const&) [/home/zxn1225/Desktop/performance_opti/pearson_op2/pearson]
     9,527,671 ( 9.34%)  ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_buffer_1.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
     6,992,944 ( 6.85%)  ./stdlib/./stdlib/strtod_l.c:____strtod_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
     5,422,352 ( 5.31%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
     3,530,679 ( 3.46%)  ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
     1,719,936 ( 1.69%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
     1,584,960 ( 1.55%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__printf_buffer [/usr/lib/x86_64-linux-gnu/libc.so.6]
     1,322,062 ( 1.30%)  ./stdlib/./stdlib/strtod_l.c:str_to_mpn.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
     1,194,816 ( 1.17%)  ???:std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]

Massif peak heap (bytes): 438272
Massif peak heap (KB): 428

  parsed run 1: Wall=0.395498 User=0.000000 Sys=0.000000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=0KB
  parsed run 2: Wall=0.106647 User=0.000000 Sys=0.000000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4016KB
  parsed run 3: Wall=0.114714 User=0.000000 Sys=0.000000 AvgCPU=200.000000% MaxCPU=200.000000% MaxRSS=0KB
  parsed run 4: Wall=0.096062 User=0.000000 Sys=0.000000 AvgCPU=0.000000% MaxCPU=0.000000% MaxRSS=0KB
  parsed run 5: Wall=0.118011 User=0.000000 Sys=0.000000 AvgCPU=0.000000% MaxCPU=0.000000% MaxRSS=0KB
===== Final summary for size=128 =====
Execution time (avg over 5 native runs):
  Avg_Wall_seconds: 0.166186
  Avg_User_seconds: 0.000000
  Avg_Sys_seconds: 0.000000
Memory (massif & sampled):
  Massif_peak_heap_bytes: 438272
  Massif_peak_heap_kB: 428
  Avg_MaxRSS_kB (sampled): 803
CPU utilization (sampling):
  Avg_CPU_percent_from_sampling: 80.000000%
  Max_CPU_percent_observed_from_sampling: 200%

Callgrind outputs: Performance/callgrind.128.out, Performance/callgrind.128.annotate.txt
Massif outputs: Performance/massif.128.out, Performance/massif.128.txt
Native per-run logs are visible in Performance/
