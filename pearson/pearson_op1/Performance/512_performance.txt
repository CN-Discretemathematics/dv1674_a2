========== Measuring size=512 ==========
Data: data/512.data -> output/output_512.txt

Callgrind top candidate functions (heuristic):
    7,351,097,554 (100.0%)  PROGRAM TOTALS
    2,487,597,056 (33.84%)  /home/zxn1225/Desktop/performance_opti/pearson/analysis.cpp:Analysis::pearson(Vector const&, Vector const&) [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
    2,150,091,776 (29.25%)  /home/zxn1225/Desktop/performance_opti/pearson/vector.cpp:Vector::mean() const [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
    1,741,422,592 (23.69%)  /home/zxn1225/Desktop/performance_opti/pearson/vector.cpp:Vector::operator[](unsigned int) const [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
      155,504,606 ( 2.12%)  ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_buffer_1.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
      111,879,413 ( 1.52%)  ./stdlib/./stdlib/strtod_l.c:____strtod_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
       86,768,852 ( 1.18%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
       56,821,168 ( 0.77%)  ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
       27,523,584 ( 0.37%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
       25,509,120 ( 0.35%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__printf_buffer [/usr/lib/x86_64-linux-gnu/libc.so.6]

Massif peak heap (bytes): 5857280
Massif peak heap (KB): 5720

  parsed run 1: Wall=1.284756 User=0.920000 Sys=0.060000 AvgCPU=91.300000% MaxCPU=111.000000% MaxRSS=8776KB
  parsed run 2: Wall=1.294124 User=0.910000 Sys=0.290000 AvgCPU=99.663636% MaxCPU=100.000000% MaxRSS=8772KB
  parsed run 3: Wall=1.228856 User=0.950000 Sys=0.180000 AvgCPU=88.240000% MaxCPU=100.000000% MaxRSS=8776KB
  parsed run 4: Wall=1.314623 User=0.960000 Sys=0.260000 AvgCPU=100.214286% MaxCPU=103.000000% MaxRSS=8772KB
  parsed run 5: Wall=1.241043 User=0.950000 Sys=0.180000 AvgCPU=97.910000% MaxCPU=100.000000% MaxRSS=8776KB
===== Final summary for size=512 =====
Execution time (avg over 5 native runs):
  Avg_Wall_seconds: 1.272680
  Avg_User_seconds: 0.938000
  Avg_Sys_seconds: 0.194000
Memory (massif & sampled):
  Massif_peak_heap_bytes: 5857280
  Massif_peak_heap_kB: 5720
  Avg_MaxRSS_kB (sampled): 8774
CPU utilization (sampling):
  Avg_CPU_percent_from_sampling: 95.465584%
  Max_CPU_percent_observed_from_sampling: 111%

Callgrind outputs: Performance/callgrind.512.out, Performance/callgrind.512.annotate.txt
Massif outputs: Performance/massif.512.out, Performance/massif.512.txt
Native per-run logs are visible in Performance/
