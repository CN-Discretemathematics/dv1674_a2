========== Measuring size=256 ==========
Data: data/256.data -> output/output_256.txt

Callgrind top candidate functions (heuristic):
    1,042,420,078 (100.0%)  PROGRAM TOTALS
    311,516,160 (29.88%)  /home/zxn1225/Desktop/performance_opti/pearson/analysis.cpp:Analysis::pearson(Vector const&, Vector const&) [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
    269,084,160 (25.81%)  /home/zxn1225/Desktop/performance_opti/pearson/vector.cpp:Vector::mean() const [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
    217,251,840 (20.84%)  /home/zxn1225/Desktop/performance_opti/pearson/vector.cpp:Vector::operator[](unsigned int) const [/home/zxn1225/Desktop/performance_opti/pearson_op1/pearson]
     38,605,775 ( 3.70%)  ./stdio-common/./stdio-common/printf_fp.c:__printf_fp_buffer_1.isra.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
     27,969,490 ( 2.68%)  ./stdlib/./stdlib/strtod_l.c:____strtod_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
     21,691,290 ( 2.08%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
     14,176,098 ( 1.36%)  ./stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/usr/lib/x86_64-linux-gnu/libc.so.6]
      6,880,512 ( 0.66%)  ???:std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
      6,364,800 ( 0.61%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__printf_buffer [/usr/lib/x86_64-linux-gnu/libc.so.6]

Massif peak heap (bytes): 1523712
Massif peak heap (KB): 1488

  parsed run 1: Wall=0.277329 User=0.130000 Sys=0.000000 AvgCPU=70.000000% MaxCPU=110.000000% MaxRSS=4948KB
  parsed run 2: Wall=0.241895 User=0.130000 Sys=0.050000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4928KB
  parsed run 3: Wall=0.266780 User=0.110000 Sys=0.000000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4892KB
  parsed run 4: Wall=0.241295 User=0.120000 Sys=0.010000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4928KB
  parsed run 5: Wall=0.215898 User=0.030000 Sys=0.000000 AvgCPU=100.000000% MaxCPU=100.000000% MaxRSS=4692KB
===== Final summary for size=256 =====
Execution time (avg over 5 native runs):
  Avg_Wall_seconds: 0.248639
  Avg_User_seconds: 0.104000
  Avg_Sys_seconds: 0.012000
Memory (massif & sampled):
  Massif_peak_heap_bytes: 1523712
  Massif_peak_heap_kB: 1488
  Avg_MaxRSS_kB (sampled): 4878
CPU utilization (sampling):
  Avg_CPU_percent_from_sampling: 94.000000%
  Max_CPU_percent_observed_from_sampling: 110%

Callgrind outputs: Performance/callgrind.256.out, Performance/callgrind.256.annotate.txt
Massif outputs: Performance/massif.256.out, Performance/massif.256.txt
Native per-run logs are visible in Performance/
